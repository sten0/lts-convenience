#!/bin/bash

# build-kernel builds a linux kernel with the right version of GCC
# and asks you to install it.  It supports concurrency for SMP and
# multicore systems, nicing, and other niceties.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public
# License v2 as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# Copyright (C) 2011-2016  Nicholas D Steeves <nsteeves@gmail.com>
#
# Requires kernel-package and fakeroot

NICE="yes"			# To nice kernel compilation, set to "yes"
EMAIL="youraddress@domain.com"

TODAY=`date +%Y%m%d`
export CONCURRENCY_LEVEL=`grep -c ^processor /proc/cpuinfo | sed 's/^0$/1/'`
CCV=`cat /proc/version | sed 's/.*gcc version //' | cut -c 1-3`
export MAKEFLAGS="CC=gcc-$CCV"

if [ ! -x "$(command -v gcc-$CCV)" ]; then
    echo "A suitable gcc version was not found"
    echo "Please install gcc-$CCV before continuing"
    exit 1
fi

make oldconfig
if [ "$NICE" = "yes" ]; then
    nice fakeroot make-kpkg binary-arch --initrd --append-to-version=."${TODAY}" || exit $?
else
    fakeroot make-kpkg binary-arch --initrd --append-to-version=."${TODAY}" || exit $?
fi

for i in VERSION PATCHLEVEL SUBLEVEL; do
    TMP=`grep ^$i Makefile | awk '{print $3}'`
    export "${i}"=$TMP
done

echo "Linux kernel ${VERSION}.${PATCHLEVEL}.${SUBLEVEL}.${TODAY} is ready to be installed" | mail -s "New kernel is ready" $EMAIL

while true; do
    printf "Would you like to install the new kernel? (yes/no) "
    read choice
    case "$choice" in
        yes | y | Yes | YES )
            break
            ;;
        no | n | No | NO )
            echo "If you say so . . . "
            sleep 1
            echo "Goodbye!"
            exit 1
            ;;
        * )
            printf "Please answer yes or no\n\n"
            ;;
    esac
done

sudo dpkg -i \
     ../linux-headers-${VERSION}.${PATCHLEVEL}.${SUBLEVEL}.${TODAY}_*.deb \
     ../linux-image-${VERSION}.${PATCHLEVEL}.${SUBLEVEL}.${TODAY}_*.deb

echo "Please reboot to activate new kernel"
