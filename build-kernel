#!/bin/bash
#
# Build-kernel builds a linux kernel with a specific version of GCC;
# It defaults to the version that was used to build your currently
# running kernel.  It supports concurrency for SMP and multicore
# systems, nicing, and other niceties.
#
# Copyright (C) 2011-2016  Nicholas D Steeves <nsteeves@gmail.com>
# Distributed under the terms of the GPLv2 license.
#
# This script needs kernel-package and fakeroot

NICE="yes"                # To nice kernel compilation, set to "yes"
EMAIL="username@domain"

TODAY=`date +%Y%m%d`
export CONCURRENCY_LEVEL=`grep -c ^processor /proc/cpuinfo | sed 's/^0$/1/'`
CCV=`cat /proc/version | sed 's/.*gcc version //' | cut -c 1-3`
# Alternatively, specifify a specific version as follows (gcc-4.9)
# CCV="4.9"
export MAKEFLAGS="CC=gcc-$CCV"

if [ ! -x "$(command -v gcc-$CCV)" ]; then
    echo "A suitable gcc version was not found"
    echo "Please install gcc-$CCV before continuing"
    exit 1
fi

make oldconfig
grep CONFIG_IOSCHED_BFQ=y .config
if [ $? -eq 0 ]; then
    BFQ='+bfq'
fi
if [ "$NICE" = "yes" ]; then
    time nice fakeroot make-kpkg binary-arch --initrd --append-to-version=$BFQ."${TODAY}" || exit $?
else
    time fakeroot make-kpkg binary-arch --initrd --append-to-version=$BFQ."${TODAY}" || exit $?
fi

for i in VERSION PATCHLEVEL SUBLEVEL; do
    TMP=`grep ^$i Makefile | awk '{print $3}'`
    export "${i}"=$TMP
done

echo "Linux kernel ${VERSION}.${PATCHLEVEL}.${SUBLEVEL}.${TODAY} is ready to be installed" \
    | mail -s "New kernel is ready" $EMAIL

while true; do
    printf "Would you like to install the new kernel? (yes/no) "
    read choice
    case "$choice" in
        yes | y | Yes | YES )
            break
            ;;
        no | n | No | NO )
            echo "If you say so . . . "
            sleep 1
            echo "Goodbye!"
            exit 1
            ;;
        * )
            printf "Please answer yes or no\n\n"
            ;;
    esac
done

sudo dpkg -i \
  ../linux-headers-${VERSION}.${PATCHLEVEL}.${SUBLEVEL}${BFQ}.${TODAY}_*.deb \
  ../linux-image-${VERSION}.${PATCHLEVEL}.${SUBLEVEL}${BFQ}.${TODAY}_*.deb \
  || exit $?

echo "Please reboot to activate new kernel"
